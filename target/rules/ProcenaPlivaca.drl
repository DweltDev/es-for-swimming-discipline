package osnovna_pravila;

import com.sample.Plivac;
import com.sample.Disciplina;


rule "Plivac je eksplozivan"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(eksplozivan  == true)
	then 
		a.getDisciplina().setSrednjaDisciplina(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setMaraton(false);
		update(a);
		
end

rule "Ako plivac nije visok, ne moze plivati prsno"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(visok == false)
	then 
		a.getDisciplina().setPrsno(false);
		
end

rule "Plivac nije eksplozivan"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(eksplozivan  == false)
	then 
		a.getDisciplina().setKratkaDisciplina(false);
		update(a);
		
end

rule "Plivac nije izdrzljiv"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(izdrzljiv   == false)
	then 
		a.getDisciplina().setSrednjaDisciplina(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setTriatlon(false);
		update(a);
		
end

rule "Plivac nije fleksibilan"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(fleksibilan   == false)
	then 
		a.getDisciplina().setPrsno(false);
		a.getDisciplina().setLedjno(false);
		a.getDisciplina().setDelfin(false);
		a.getDisciplina().setMesovito(false);
		update(a);
		
end

rule "Plivac nije plovan"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(plovan  == false)
	then 
		a.getDisciplina().setLedjno(false);
		a.getDisciplina().setMesovito(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setMaraton(false);
		update(a);
		
end

rule "Plivac nije snažan"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(snazan   == false)
	then 
		a.getDisciplina().setSrednjaDisciplina(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setDelfin(false);
		a.getDisciplina().setMesovito(false);
		update(a);
		
end

rule "Ako je BMI sportiste visok, ne moze da pliva kratke discipline ni ledjni stil"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(kategorijaBMI   == "prekomeran")
	then 
		a.getDisciplina().setKratkaDisciplina(false);
		a.getDisciplina().setLedjno(false);
		update(a);
		
end

rule "Ako je BMI sportiste nizak, ne moze da pliva triatlon ni maratonske trke"
	no-loop
	agenda-group "fizicke-karakteristike"
	when
		a: Plivac(kategorijaBMI   == "nizak")
	then 
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setTriatlon(false);
		update(a);
		
end

rule "Ako je plivac dete, ne moze da pliva maratonske i triatlonske trke"
	no-loop
	when
		a: Plivac(starost == "dete")
	then
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setTriatlon(false);
		update(a);
end

rule "Ako je plivac tinejdzer, ne moze da pliva triatlonske trke"
	no-loop
	when
		a: Plivac(starost == "tinejdzer")
	then
		a.getDisciplina().setTriatlon(false);
		
end

rule "Ako je plivac mladji rekreativac, moze da pliva kratke i maratonske trke"
	no-loop
	when
		a: Plivac(starost == "mladji rekreativac")
	then
		a.getDisciplina().setSrednjaDisciplina(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setTriatlon(false);
		
end

rule "Ako je plivac stariji rekreativac, moze da pliva kratke i maratonske trke"
	no-loop
	when
		a: Plivac(starost == "stariji rekreativac")
	then
		a.getDisciplina().setSrednjaDisciplina(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setTriatlon(false);
		
end

rule "Plivac ne pliva prsno posledica"
	no-loop
	agenda-group "tehnika-karakteristike"
	salience -1
	when
		a: Plivac(nePlivaPrsno == true)
	then 
		a.getDisciplina().setPrsno(false);
		a.getDisciplina().setMesovito(false);
		update(a);
		
end

rule "Plivac nije perfekcionista za tehniku"
	no-loop
	agenda-group "tehnika-karakteristike"
	when
		a: Plivac(perfekcionistaZaTehniku    == false)
	then 
		a.getDisciplina().setPrsno(false);
		a.getDisciplina().setMesovito(false);
		update(a);
		
end

rule "Ako plivac nema vise od 3 treninga nedeljno, ne moze plivati nista osim kratkih disciplina"
	no-loop
	when
		a: Plivac(brojTreningaNedeljno<=3)
	then
		a.getDisciplina().setSrednjaDisciplina(false);
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setTriatlon(false);
		update(a);
		
end

rule "Ako plivac nema vise od 5 treninga nedeljno, ne moze plivati maratone i triatlone"
	no-loop
	agenda-group "maraton"
	when
		a: Plivac(brojTreningaNedeljno<=5)
	then
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setTriatlon(false);
		update(a);
		
end

rule "Plivac nije mentalno izdrzljiv"
	no-loop
	agenda-group "maraton"
	when
		a: Plivac(mentalnoIzdrzljiv   == false)
	then 
		a.getDisciplina().setDugaDisciplina(false);
		a.getDisciplina().setMaraton(false);
		a.getDisciplina().setTriatlon(false);
		update(a);
		
end

rule "Ako plivac ne pliva u slanoj vodi, ne moze plivati dugi triatlon ni maraton"
	no-loop
	agenda-group "maraton"
	when
		a: Plivac(plivaUSlanojVodi == false)
	then
		a.getDisciplina().setTriatlon(false);
		a.getDisciplina().setMaraton(false);
		update(a);
		
end

rule "Ako plivac nema vise od 5 godina plivackog staza ne moze plivati triatlon"
	no-loop
	agenda-group "triatlon"
	when
		a: Plivac(brojGodinaPlivackogStaza  <= 5)
	then
		a.getDisciplina().setTriatlon(false);
		update(a);
		
end

rule "Ako plivac ne ume da vozi bicikl i trci dobro, ne moze da pliva triatlonske trke"
	no-loop
	agenda-group "triatlon"
	when
		a: Plivac(voziBiciklITrci  == false)
	then
		a.getDisciplina().setTriatlon(false);
		
end

